worker_processes auto;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Базовые настройки
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Логирование
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    # Таймауты проксирования
    proxy_connect_timeout 600s;
    proxy_send_timeout 600s;
    proxy_read_timeout 600s;
    send_timeout 600s;

    # Размеры буферов
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    proxy_temp_file_write_size 256k;

    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;

        # Статические файлы
        location / {
            try_files $uri $uri/ /index.html;
            expires 1d;
            add_header Cache-Control "public";
            
            # Добавляем заголовки безопасности
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-Content-Type-Options "nosniff";
        }

        # API endpoints
        location /api/ {
            proxy_pass http://analyzer-backend:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_buffering off;
            proxy_request_buffering off;
        }

        # Статические ресурсы
        location ~* \.(js|css)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # Обработка ошибок
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            internal;
        }
    }
}